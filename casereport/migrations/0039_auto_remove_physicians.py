# -*- coding: utf-8 -*-
# Generated by Django 1.9.11 on 2017-06-20 14:52
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


def phys_to_user(apps, schema_editor):
    """ Replace physician reference fields with fields that reference
        site users. Find the user associate with the physican to set
        in the new field.
    """
    CaseReport = apps.get_model("casereport", "CaseReport")
    User = apps.get_model("accounts", "User")
    for cr in CaseReport.objects.all():
        email = cr.primary_physician.email
        try:
            user = User.objects.get(email=email)
            cr.primary_author = user
        except User.DoesNotExist:
            print("CR #{0} - User {1} ({2}) could not be found".format(
                cr.id,
                cr.primary_physician.name,
                email)
            )
            # set Sarah as the default
            cr.primary_author = User.objects.get(email='sg@rapidscience.org')

        co_authors = cr.referring_physician.all()
        for auth in co_authors:
            co_email = auth.email
            # skip if coauthor is listed as the author
            if co_email == email:
                continue
            try:
                co_user = User.objects.get(email=co_email)
                cr.co_author.add(co_user)
            except User.DoesNotExist:
                print("CR #{0} - User {1} ({2}) could not be found".format(
                    cr.id,
                    auth.name,
                    co_email)
                )
                # set Sarah as the default
                cr.co_author.add(User.objects.get(email='sg@rapidscience.org'))
        cr.save()


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('casereport', '0038_casereport_tags'),
    ]

    operations = [
        migrations.AddField(
            model_name='casereport',
            name='co_author',
            field=models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='Case Report Co-Authors'),
        ),
        migrations.AddField(
            model_name='casereport',
            name='primary_author',
            field=models.ForeignKey(null=True, on_delete=django.db.models.SET_NULL, related_name='primary_case', to=settings.AUTH_USER_MODEL, verbose_name='Case Report Author'),
        ),
        migrations.RunPython(phys_to_user),
        migrations.RemoveField(
            model_name='casereport',
            name='primary_physician',
        ),
        migrations.RemoveField(
            model_name='casereport',
            name='referring_physician',
        ),
    ]
